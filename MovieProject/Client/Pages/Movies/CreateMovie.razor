@page "/movies/create"
@using MovieProject.Client.Pages.Components
@inject IServiceMovie movie_i
@inject IErrorMessage showMessage
@inject NavigationManager navigationManager

@if (ShowMoviesForm)
{
<FormMovie Movie="Movie" OnValidSubmit="Create" CategoriasNoSeleccionadas="CategoriasNoSeleccionadas"></FormMovie>
   
}else{
    <div class="alert alert-info" role="alert">Cargando</div>

}

@code {
    private Movie Movie = new Movie();
    private List<Category> CategoriasNoSeleccionadas = new List<Category>();
    @* No se cargaran las peliculas si no existen categor√≠as en el sistema *@
    private bool ShowMoviesForm{get;set;} = false;

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await movie_i.Get<List<Category>>("api/categories");
        CategoriasNoSeleccionadas = responseHttp.Response;
        ShowMoviesForm = true;
    }

    async Task Create()
    {
        var httpResponse = await movie_i.Post<Movie, int>("api/movies", Movie);
        if (httpResponse.Error)
        {
            var body = await httpResponse.GetBody();
            await showMessage.ShowErrorMessage(body);
            Console.WriteLine(body);
        }
        else
        {
            var MovieId = httpResponse.Response;
            navigationManager.NavigateTo($"/movie/{MovieId}/{Movie.Moviename.Replace(" ", "-")}");
        }
    }
}
